[
    {
        "q_text": "Identify the error in the following code\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nvoid fun() {}\n\nstatic int x = 5;\nx++;\ncout << x << \" \";\n\nint main() {\n    for (int i = 0; i < 3; i++)\n        fun();\n    return 0;\n}\n```",
        "options": [
            "Compilation Error - Undefined behaviour",
            "Logic Error - Unexpected output",
            "No Error - Correct output",
            "Run-time Error - Memory corruption"
        ],
        "answer": 0,
        "max_points": 10,
        "q_id": "cpp1"
    },
    {
        "q_text": "```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    unsigned int x = 0;\n    x = x - 1;\n    cout << x << endl;\n    return 0;\n}\n```",
        "options": [
            "No Error - Output will be 0",
            "Logic Error - Unexpected large value due to underflow",
            "Compilation Error - Cannot subtract from unsigned integer",
            "Runtime Error - Causes undefined behaviour"
        ],
        "answer": 1,
        "max_points": 10,
        "q_id": "cpp2"
    },
    {
        "q_text": "What will be the output of the following code?\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    char ch = 'A';\n    int num = ch + 1;\n    cout << num;\n    return 0;\n}\n```",
        "options": ["65", "66", "'B'", "Compilation Error"],
        "answer": 1,
        "max_points": 10,
        "q_id": "cpp3"
    },
    {
        "q_text": "```cpp\n#include <iostream>\n#include <climits>\nusing namespace std;\n\nint main() {\n    int a = INT_MIN;\n    int b = -1;\n    cout << (a / b);\n    return 0;\n}\n```",
        "options": ["2147483648", "-2147483648", "2147483647", "Compilation Error"],
        "answer": 3,
        "max_points": 10,
        "q_id": "cpp4"
    },
    {
        "q_text": "```cpp\n#include <iostream>\n#include <fstream>\nusing namespace std;\n\nint main() {\n    ifstream fp;\n    char buffer[50];\n    fp >> buffer; // Similar to fscanf\n    cout << buffer;\n    fp.close();\n    return 0;\n}\n```",
        "options": [
            "fp.open(\"file.txt\");",
            "Check if fp.is_open() before reading.",
            "Use fp.getline(buffer, 50); instead of >>.",
            "All of the above"
        ],
        "answer": 3,
        "max_points": 10,
        "q_id": "cpp5"
    },
    {
        "q_text": "```cpp\n#include <iostream>\nusing namespace std;\n\nvoid recursiveFunction() {\n    int x = 5;\n    recursiveFunction();\n}\n\nint main() {\n    recursiveFunction();\n    return 0;\n}\n```",
        "options": ["Infinite loop", "Segmentation fault (Stack overflow)", "Prints 5 infinitely", "Compilation error"],
        "answer": 1,
        "max_points": 10,
        "q_id": "cpp6"
    },
    {
        "q_text": "```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[5] = {1, 2, 3, 4, 5};\n    for (int i = 0; i <= 5; i++) {\n        cout << arr[i] << \" \";\n    }\n    return 0;\n}\n```",
        "options": [
            "Prints 1 2 3 4 5 then crashes (Undefined Behavior)",
            "Prints 1 2 3 4 5 0 without errors",
            "Infinite loop",
            "Compilation error"
        ],
        "answer": 0,
        "max_points": 10,
        "q_id": "cpp7"
    },
    {
        "q_text": "```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    float x = 0.1f;\n    if (x == 0.1f)\n        cout << \"Equal\";\n    else\n        cout << \"Not Equal\";\n    return 0;\n}\n```",
        "options": ["Equal", "Not Equal", "Compilation error", "Undefined behaviour"],
        "answer": 1,
        "max_points": 10,
        "q_id": "cpp8"
    },
    {
        "q_text": "```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int x = 5;\n    cout << x << \" \" << x++ << \" \" << ++x;\n    return 0;\n}\n```",
        "options": ["5 5 7", "5 6 7", "7 6 7", "Undefined behaviour"],
        "answer": 3,
        "max_points": 10,
        "q_id": "cpp9"
    },
    {
        "q_text": "```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    if (1)\n        ;\n    else\n        cout << \"Else block executed\\n\";\n    cout << \"Code continues...\\n\";\n    return 0;\n}\n```",
        "options": ["Code continues...", "Else block executed", "Compilation error", "No output"],
        "answer": 0,
        "max_points": 10,
        "q_id": "cpp10"
    }
  ]
  