[
  {
      "q_text": "Identify the Error in the Following Code def fun():  x=5 # Not static, reinitialized every call  x+=1  print(x, end=\" \")  for i in range(3):  fun()",
      "options": [
          "Compilation Error",
          "Prints 6 6 6 (no static persistence)",
          "Prints 6 7 8",
          "Runtime Error"
      ],
      "answer": 1,
      "max_points": 10,
      "q_id": "python1"
  },
  {
      "q_text": "x=0  x=x-1  print(x)",
      "options": [
          "0",
          "-1 (no underflow, normal negative numbers)",
          "4294967295 (like C unsigned underflow)",
          "Runtime Error"
      ],
      "answer": 1,
      "max_points": 10,
      "q_id": "python2"
  },
  {
      "q_text": "What Will Be the Output?  ch ='A'  num=ord(ch)+1 #'ord()' gets ASCII value print(num)",
      "options": ["65", "66", "'B'", "TypeError"],
      "answer": 1,
      "max_points": 10,
      "q_id": "python3"
  },
  {
      "q_text": "a=-2147483648 # Simulating 32-bit INT_MIN b=-1  print(a // b) # Integer division in Python",
      "options": ["2147483648", "-2147483648", "2147483647", "OverflowError"],
      "answer": 0,
      "max_points": 10,
      "q_id": "python4"
  },
  {
      "q_text": "try:  fp = open(\"file.txt\", \"r\")  buffer = fp.read(50) # Reads first 50 bytes  print(buffer)  fp.close()  except FileNotFoundError:  print(\"File not found!\")",
      "options": [
          "Missing fp = open(\"file.txt\", \"r\")",
          "Check if file exists with os.path.exists()",
          "Use fp.readline() instead of read(50)",
          "All of the above"
      ],
      "answer": 3,
      "max_points": 10,
      "q_id": "python5"
  },
  {
      "q_text": "def recursive_function():  x=5  recursive_function()  recursive_function()",
      "options": ["Infinite loop", "RecursionError (stack overflow)", "Prints 5 infinitely", "SyntaxError"],
      "answer": 1,
      "max_points": 10,
      "q_id": "python6"
  },
  {
      "q_text": "arr = [1, 2, 3, 4, 5]  for i in range(6): # 0 to 5 (6 elements)  print(arr[i], end=\" \")",
      "options": [
          "1 2 3 4 5 then crashes",
          "123450",
          "IndexError",
          "SyntaxError"
      ],
      "answer": 2,
      "max_points": 10,
      "q_id": "python7"
  },
  {
      "q_text": "x=0.1  if x==0.1  print(\"Equal\")  else:  print(\"Not Equal\")",
      "options": ["Equal", "Not Equal", "TypeError", "RuntimeError"],
      "answer": 0,
      "max_points": 10,
      "q_id": "python8"
  },
  {
      "q_text": "x=5  print(x, x + 1, x+2) # No post-increment in Python",
      "options": ["5 6 7", "7 6 5", "Undefined behavior", "SyntaxError"],
      "answer": 0,
      "max_points": 10,
      "q_id": "python9"
  },
  {
      "q_text": "if True:  pass # Python uses 'pass' for empty blocks  else:  print(\"Else block executed\")  print(\"Code continues...\")",
      "options": ["Code continues...", "Else block executed", "IndentationError", "No output"],
      "answer": 0,
      "max_points": 10,
      "q_id": "python10"
  }
]